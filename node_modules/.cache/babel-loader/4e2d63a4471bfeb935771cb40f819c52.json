{"ast":null,"code":"var _jsxFileName = \"/home/chaitanya/Documents/Ecommerce1/ShareEcommerce/src/Pages/demo.js\";\n//api integration in react js\nimport React from 'react';\n\nclass MyComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      brand: []\n    };\n    this.getBrands = this.getBrands.bind(this);\n  }\n\n  componentDidMount() {\n    this.getBrands();\n  }\n\n  getBrands() {\n    fetch(\"http://192.168.1.205:5052/api/brand\").then(res => res.json()).then(result => {\n      this.setState({\n        isLoaded: true,\n        brand: result.Brand // brand:result\n\n      });\n    }, // Note: it's important to handle errors here\n    // instead of a catch() block so that we don't swallow\n    // exceptions from actual bugs in components.\n    error => {\n      this.setState({\n        isLoaded: true,\n        error\n      });\n    });\n  }\n\n  render() {\n    console.log(this.state.brand);\n    const {\n      error,\n      isLoaded,\n      brand\n    } = this.state;\n\n    if (error) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"Error: \", error.message);\n    } else if (!isLoaded) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, \"Loading...\");\n    } else {\n      return React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, brand.map(brands => React.createElement(\"li\", {\n        key: brands.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, brands.brandname), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, brands.branddescription))));\n    }\n  }\n\n} //http://192.168.1.205:5052/api/brand\n\n\nexport default MyComponent;","map":{"version":3,"sources":["/home/chaitanya/Documents/Ecommerce1/ShareEcommerce/src/Pages/demo.js"],"names":["React","MyComponent","Component","constructor","props","state","error","isLoaded","brand","getBrands","bind","componentDidMount","fetch","then","res","json","result","setState","Brand","render","console","log","message","map","brands","id","brandname","branddescription"],"mappings":";AAAA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;;AAGA,MAAMC,WAAN,SAA0BD,KAAK,CAACE,SAAhC,CAA0C;AACtCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,IADI;AAEXC,MAAAA,QAAQ,EAAE,KAFC;AAGXC,MAAAA,KAAK,EAAE;AAHI,KAAb;AAMA,SAAKC,SAAL,GAAiB,KAAKA,SAAL,CAAeC,IAAf,CAAoB,IAApB,CAAjB;AACD;;AAGDC,EAAAA,iBAAiB,GAAG;AAChB,SAAKF,SAAL;AAGH;;AACDA,EAAAA,SAAS,GAAG;AACRG,IAAAA,KAAK,CAAC,qCAAD,CAAL,CACCC,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAGGG,MAAD,IAAY;AACV,WAAKC,QAAL,CAAc;AACZV,QAAAA,QAAQ,EAAE,IADE;AAEZC,QAAAA,KAAK,EAAEQ,MAAM,CAACE,KAFF,CAGd;;AAHc,OAAd;AAMD,KAVH,EAWE;AACA;AACA;AACCZ,IAAAA,KAAD,IAAW;AACT,WAAKW,QAAL,CAAc;AACZV,QAAAA,QAAQ,EAAE,IADE;AAEZD,QAAAA;AAFY,OAAd;AAID,KAnBH;AAsBH;;AAEDa,EAAAA,MAAM,GAAG;AACLC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKhB,KAAL,CAAWG,KAAvB;AAEF,UAAM;AAAEF,MAAAA,KAAF;AAASC,MAAAA,QAAT;AAAmBC,MAAAA;AAAnB,QAA6B,KAAKH,KAAxC;;AACA,QAAIC,KAAJ,EAAW;AACT,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAaA,KAAK,CAACgB,OAAnB,CAAP;AACD,KAFD,MAEO,IAAI,CAACf,QAAL,EAAe;AACpB,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACD,KAFM,MAEA;AACL,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACCC,KAAK,CAACe,GAAN,CAAWC,MAAD,IACX;AAAI,QAAA,GAAG,EAAEA,MAAM,CAACC,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKD,MAAM,CAACE,SAAZ,CADA,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAIF,MAAM,CAACG,gBAAX,CAFA,CADC,CADD,CADJ;AAWD;AACF;;AAhEqC,C,CAmE1C;;;AAEA,eAAe1B,WAAf","sourcesContent":["//api integration in react js\n\nimport React from 'react'\n\n\nclass MyComponent extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        error: null,\n        isLoaded: false,\n        brand: []\n      };\n\n      this.getBrands = this.getBrands.bind(this);\n    }\n\n  \n    componentDidMount() {\n        this.getBrands();\n      \n   \n    }\n    getBrands() {\n        fetch(\"http://192.168.1.205:5052/api/brand\")\n        .then(res => res.json())\n        .then(\n          (result) => {\n            this.setState({\n              isLoaded: true,\n              brand: result.Brand\n            // brand:result\n            });\n           \n          },\n          // Note: it's important to handle errors here\n          // instead of a catch() block so that we don't swallow\n          // exceptions from actual bugs in components.\n          (error) => {\n            this.setState({\n              isLoaded: true,\n              error\n            });\n          }\n          \n        )\n    }\n  \n    render() {\n        console.log(this.state.brand);\n   \n      const { error, isLoaded, brand } = this.state;\n      if (error) {\n        return <div>Error: {error.message}</div>;\n      } else if (!isLoaded) {\n        return <div>Loading...</div>;\n      } else {\n        return (\n            <ul>\n            {brand.map((brands) => (\n            <li key={brands.id}>\n            <h1>{brands.brandname}</h1>\n            <p>{brands.branddescription}</p> \n            </li>\n            ))}\n            </ul>\n            \n        );\n      }\n    }\n  }\n\n//http://192.168.1.205:5052/api/brand\n\nexport default MyComponent;"]},"metadata":{},"sourceType":"module"}